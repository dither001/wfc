import { RotateClockwise, RotateCounterClockwise } from "./tile.js";
export class Module {
    constructor(name, path, tileData, degrees = 0) {
        this.name = name;
        this.tileData = tileData;
        this.canvas = document.createElement('canvas');
        const radians = degrees * Math.PI / 180;
        const image = document.createElement('img');
        image.addEventListener('load', () => {
            this.canvas.width = image.width;
            this.canvas.height = image.height;
            const ctx = this.canvas.getContext('2d');
            // rotate from center pivot
            ctx.translate(this.canvas.width / 2, this.canvas.height / 2);
            ctx.rotate(radians);
            ctx.translate(-this.canvas.width / 2, -this.canvas.height / 2);
            ctx.drawImage(image, 0, 0);
        });
        image.setAttribute('src', path);
        switch (degrees) {
            case 90:
                this.tileData = RotateClockwise(this.tileData);
                break;
            case 180:
                this.tileData = RotateClockwise(this.tileData);
                this.tileData = RotateClockwise(this.tileData);
                break;
            case 270:
                this.tileData = RotateCounterClockwise(this.tileData);
                break;
            case 0:
            default:
                break;
        }
        this.name = generateId(name, degrees);
        console.log(this.name, this.tileData);
    }
}
function generateId(name, degrees) {
    return `${name}_${degrees.toString()}`;
}
export const PossibleRotations = [0, 90, 180, 270];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsibW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBWSxlQUFlLEVBQUUsc0JBQXNCLEVBQUUsa0JBQWU7QUFFM0UsTUFBTSxPQUFPLE1BQU07SUFJakIsWUFBbUIsSUFBWSxFQUFFLElBQVksRUFBUyxRQUFpQixFQUFFLFVBQWtCLENBQUM7UUFBekUsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUF1QixhQUFRLEdBQVIsUUFBUSxDQUFTO1FBQ3JFLElBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUUvQyxNQUFNLE9BQU8sR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUM7UUFFeEMsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQXFCLENBQUM7UUFDaEUsS0FBSyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7WUFDbEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztZQUNoQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1lBQ2xDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRXpDLDJCQUEyQjtZQUMzQixHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztZQUM3RCxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3BCLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztZQUMvRCxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUM7UUFFSCxLQUFLLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVoQyxRQUFRLE9BQU8sRUFBRTtZQUNmLEtBQUssRUFBRTtnQkFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQy9DLE1BQU07WUFDUixLQUFLLEdBQUc7Z0JBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMvQyxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQy9DLE1BQU07WUFDUixLQUFLLEdBQUc7Z0JBQ0osSUFBSSxDQUFDLFFBQVEsR0FBRyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ3hELE1BQU07WUFDUixLQUFLLENBQUMsQ0FBQztZQUNQO2dCQUNFLE1BQU07U0FDVDtRQUVELElBQUksQ0FBQyxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV0QyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7Q0FDRjtBQUVELFNBQVMsVUFBVSxDQUFDLElBQVksRUFBRSxPQUFlO0lBQy9DLE9BQU8sR0FBRyxJQUFJLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUM7QUFDekMsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaWxlRGF0YSwgUm90YXRlQ2xvY2t3aXNlLCBSb3RhdGVDb3VudGVyQ2xvY2t3aXNlIH0gZnJvbSAnLi90aWxlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBNb2R1bGUge1xyXG5cclxuICBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgbmFtZTogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIHB1YmxpYyB0aWxlRGF0YTpUaWxlRGF0YSwgZGVncmVlczogbnVtYmVyID0gMCkge1xyXG4gICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcclxuXHJcbiAgICBjb25zdCByYWRpYW5zID0gZGVncmVlcyAqIE1hdGguUEkgLyAxODA7XHJcblxyXG4gICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKSBhcyBIVE1MSW1hZ2VFbGVtZW50O1xyXG4gICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcclxuICAgICAgdGhpcy5jYW52YXMud2lkdGggPSBpbWFnZS53aWR0aDtcclxuICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0ID0gaW1hZ2UuaGVpZ2h0O1xyXG4gICAgICBjb25zdCBjdHggPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG5cclxuICAgICAgLy8gcm90YXRlIGZyb20gY2VudGVyIHBpdm90XHJcbiAgICAgIGN0eC50cmFuc2xhdGUodGhpcy5jYW52YXMud2lkdGggLyAyLCB0aGlzLmNhbnZhcy5oZWlnaHQgLyAyKTtcclxuICAgICAgY3R4LnJvdGF0ZShyYWRpYW5zKTtcclxuICAgICAgY3R4LnRyYW5zbGF0ZSgtdGhpcy5jYW52YXMud2lkdGggLyAyLCAtdGhpcy5jYW52YXMuaGVpZ2h0IC8gMik7XHJcbiAgICAgIGN0eC5kcmF3SW1hZ2UoaW1hZ2UsIDAsIDApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaW1hZ2Uuc2V0QXR0cmlidXRlKCdzcmMnLCBwYXRoKTtcclxuXHJcbiAgICBzd2l0Y2ggKGRlZ3JlZXMpIHtcclxuICAgICAgY2FzZSA5MDpcclxuICAgICAgICB0aGlzLnRpbGVEYXRhID0gUm90YXRlQ2xvY2t3aXNlKHRoaXMudGlsZURhdGEpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDE4MDpcclxuICAgICAgICB0aGlzLnRpbGVEYXRhID0gUm90YXRlQ2xvY2t3aXNlKHRoaXMudGlsZURhdGEpO1xyXG4gICAgICAgIHRoaXMudGlsZURhdGEgPSBSb3RhdGVDbG9ja3dpc2UodGhpcy50aWxlRGF0YSk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgMjcwOlxyXG4gICAgICAgICAgdGhpcy50aWxlRGF0YSA9IFJvdGF0ZUNvdW50ZXJDbG9ja3dpc2UodGhpcy50aWxlRGF0YSk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgMDpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLm5hbWUgPSBnZW5lcmF0ZUlkKG5hbWUsIGRlZ3JlZXMpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKHRoaXMubmFtZSwgdGhpcy50aWxlRGF0YSk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZUlkKG5hbWU6IHN0cmluZywgZGVncmVlczogbnVtYmVyKSB7XHJcbiAgcmV0dXJuIGAke25hbWV9XyR7ZGVncmVlcy50b1N0cmluZygpfWA7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBQb3NzaWJsZVJvdGF0aW9ucyA9IFswLCA5MCwgMTgwLCAyNzBdOyJdfQ==